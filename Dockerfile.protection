# Build stage
FROM gcc:12 AS builder

# Install dependencies
RUN apt-get update && apt-get install -y \
    make \
    cmake \
    libpthread-stubs0-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Copy source files
COPY src/protection/core_protection.h src/protection/
COPY src/protection/core_protection.c src/protection/
COPY src/protection/protection_server.c src/protection/

# Copy test files for validation
COPY tests/test_core_protection.c tests/
COPY tests/benchmark_protection.c tests/

# Build the protection service
RUN gcc -O3 -march=native -mtune=native -Wall -Wextra \
    -o protection_server \
    src/protection/protection_server.c \
    src/protection/core_protection.c \
    -lpthread -lm

# Run tests in build stage to validate
RUN gcc -O3 -march=native -mtune=native -Wall -Wextra \
    -o test_protection \
    tests/test_core_protection.c \
    src/protection/core_protection.c \
    -lpthread -lm && \
    ./test_protection

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpthread-stubs0-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 -s /bin/bash protection

# Copy binary from builder
COPY --from=builder /build/protection_server /usr/local/bin/

# Create necessary directories
RUN mkdir -p /etc/cns-protection /var/log/cns-protection && \
    chown -R protection:protection /etc/cns-protection /var/log/cns-protection

# Switch to non-root user
USER protection

# Expose ports
EXPOSE 8080 9090

# Health check
HEALTHCHECK --interval=10s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Set environment defaults
ENV MAX_POSITION_RISK_PERCENT=0.01 \
    DAILY_LOSS_LIMIT_PERCENT=0.02 \
    DEFAULT_STOP_PERCENT=0.02 \
    MAX_RESPONSE_TIME_MS=100 \
    LOG_LEVEL=INFO

# Run the protection service
ENTRYPOINT ["/usr/local/bin/protection_server"]