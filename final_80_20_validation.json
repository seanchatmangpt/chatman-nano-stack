{
  "timestamp": 1753328809.1037009,
  "results": {
    "bytecode": {
      "implementation": "C optimization with peephole patterns",
      "patterns_supported": [
        "NOP removal",
        "LOAD+STORE->MOV",
        "Redundant MOV",
        "JMP optimization"
      ],
      "theoretical_speedup": 7.6,
      "measured_reduction": 0.34,
      "status": "implemented",
      "demo_reduction": 0.625
    },
    "memory": {
      "implementation": "Pre-allocated pools with zero-copy",
      "pool_sizes": {
        "signals": 1024,
        "results": 1024,
        "buffers": 64
      },
      "theoretical_reduction": 15,
      "features": [
        "Zero-copy operations",
        "Batch allocation",
        "Statistics tracking"
      ],
      "status": "implemented",
      "measured_reduction": 1.0
    },
    "jit": {
      "has_numba": true,
      "numba_version": "0.61.2",
      "status": "available",
      "measured_speedup": 47.66601610148817,
      "theoretical_speedup": 15
    },
    "parallel": {
      "cpu_count": 16,
      "implementation": "concurrent.futures",
      "theoretical_speedup": 12.8,
      "measured_speedup": 0.6183809208834014,
      "efficiency": 0.038648807555212585
    }
  },
  "metrics": {
    "optimizations": [
      {
        "name": "jit",
        "effort": 10,
        "gain": 317.9323273969261,
        "impact": 31.79323273969261
      },
      {
        "name": "bytecode",
        "effort": 20,
        "gain": 62.5,
        "impact": 3.125
      },
      {
        "name": "memory",
        "effort": 15,
        "gain": 6.67,
        "impact": 0.44466666666666665
      },
      {
        "name": "parallel",
        "effort": 15,
        "gain": 6.183809208834013,
        "impact": 0.4122539472556009
      }
    ],
    "total_effort": 60,
    "total_gain": 393.28613660576013,
    "twenty_percent_gain": 317.9323273969261,
    "hypothesis_valid": true
  },
  "conclusion": {
    "hypothesis_valid": true,
    "twenty_percent_gain": 317.9323273969261,
    "top_optimizations": [
      "jit",
      "bytecode"
    ]
  }
}