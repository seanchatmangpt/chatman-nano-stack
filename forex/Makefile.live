# CNS Forex Live Trading System Makefile
# Compiles real broker integration with OANDA API

CC = gcc
CFLAGS = -Wall -Wextra -O3 -std=c11 -D_GNU_SOURCE
INCLUDES = -I. -I../bitactor/src -I../
LIBS = -lcurl -ljson-c -lpthread -lm -lrt

# Source files
CORE_SOURCES = forex_core.c live_trading_engine.c oanda_integration.c
DEMO_SOURCES = live_demo.c

# Object files
CORE_OBJECTS = $(CORE_SOURCES:.c=.o)
DEMO_OBJECTS = $(DEMO_SOURCES:.c=.o)

# Targets
LIVE_ENGINE = live_trading_engine
LIVE_DEMO = live_demo

.PHONY: all clean live demo install-deps check-deps

all: check-deps $(LIVE_ENGINE) $(LIVE_DEMO)

# Main live trading engine
$(LIVE_ENGINE): $(CORE_OBJECTS)
	@echo "üîó Linking live trading engine..."
	$(CC) $(CFLAGS) -o $@ $^ $(LIBS)
	@echo "‚úÖ Live trading engine compiled: $(LIVE_ENGINE)"

# Demo application
$(LIVE_DEMO): $(CORE_OBJECTS) $(DEMO_OBJECTS)
	@echo "üîó Linking live trading demo..."
	$(CC) $(CFLAGS) -o $@ $^ $(LIBS)
	@echo "‚úÖ Live trading demo compiled: $(LIVE_DEMO)"

# Object file compilation
%.o: %.c
	@echo "üî® Compiling $<..."
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Check for required dependencies
check-deps:
	@echo "üîç Checking dependencies..."
	@command -v pkg-config >/dev/null 2>&1 || { echo "‚ùå pkg-config not found. Install with: brew install pkg-config"; exit 1; }
	@pkg-config --exists libcurl || { echo "‚ùå libcurl not found. Install with: brew install curl"; exit 1; }
	@pkg-config --exists json-c || { echo "‚ùå json-c not found. Install with: brew install json-c"; exit 1; }
	@echo "‚úÖ All dependencies found"

# Install dependencies on macOS
install-deps:
	@echo "üì¶ Installing dependencies..."
	@if command -v brew >/dev/null 2>&1; then \
		brew install curl json-c pkg-config; \
	else \
		echo "‚ùå Homebrew not found. Install from: https://brew.sh/"; \
		exit 1; \
	fi
	@echo "‚úÖ Dependencies installed"

# Test compilation with minimal example
test-compile:
	@echo "üß™ Testing compilation..."
	@echo '#include <stdio.h>\n#include <curl/curl.h>\n#include <json-c/json.h>\nint main(){printf("‚úÖ Libraries linked\\n");return 0;}' > test.c
	$(CC) $(CFLAGS) test.c -o test $(LIBS)
	./test
	rm -f test test.c
	@echo "‚úÖ Compilation test passed"

# Run live demo tests
demo: $(LIVE_DEMO)
	@echo "üöÄ Running live trading demos..."
	./$(LIVE_DEMO) --connection
	./$(LIVE_DEMO) --strategy
	./$(LIVE_DEMO) --risk

# Run live simulation (requires OANDA_TOKEN)
live: $(LIVE_DEMO)
	@if [ -z "$$OANDA_TOKEN" ]; then \
		echo "‚ùå OANDA_TOKEN environment variable not set"; \
		echo "   Get token from: https://developer.oanda.com/"; \
		echo "   Run: export OANDA_TOKEN=\"your-demo-token\""; \
		exit 1; \
	fi
	@echo "üéØ Starting live simulation with OANDA..."
	./$(LIVE_DEMO) --live

# Performance benchmarks
benchmark: $(LIVE_ENGINE)
	@echo "‚ö° Running performance benchmarks..."
	@echo "TODO: Implement performance benchmarks"

# Clean build artifacts
clean:
	@echo "üßπ Cleaning build artifacts..."
	rm -f $(CORE_OBJECTS) $(DEMO_OBJECTS)
	rm -f $(LIVE_ENGINE) $(LIVE_DEMO)
	rm -f *.csv *.log
	@echo "‚úÖ Clean completed"

# Development helpers
dev-setup: install-deps test-compile
	@echo "üõ†Ô∏è Development environment ready"
	@echo "üìã Next steps:"
	@echo "   1. Get OANDA demo token: https://developer.oanda.com/"
	@echo "   2. Export token: export OANDA_TOKEN=\"your-token\""
	@echo "   3. Build: make all"
	@echo "   4. Test: make demo"
	@echo "   5. Live test: make live"

# Help
help:
	@echo "CNS Forex Live Trading System Makefile"
	@echo "======================================"
	@echo ""
	@echo "Targets:"
	@echo "  all          - Build live trading engine and demo"
	@echo "  demo         - Run demo tests (no real connection)"
	@echo "  live         - Run live simulation (requires OANDA_TOKEN)"
	@echo "  test-compile - Test that all libraries can be linked"
	@echo "  install-deps - Install required dependencies (macOS)"
	@echo "  check-deps   - Check if dependencies are installed"
	@echo "  benchmark    - Run performance benchmarks"
	@echo "  clean        - Remove build artifacts"
	@echo "  dev-setup    - Set up development environment"
	@echo "  help         - Show this help"
	@echo ""
	@echo "Dependencies:"
	@echo "  - libcurl (for REST API calls)"
	@echo "  - json-c (for JSON parsing)"
	@echo "  - pthread (for threading)"
	@echo ""
	@echo "Environment Variables:"
	@echo "  OANDA_TOKEN  - Your OANDA demo API token"
	@echo ""
	@echo "Examples:"
	@echo "  make dev-setup           # First-time setup"
	@echo "  make all                 # Build everything"
	@echo "  make demo                # Test without real connection"
	@echo "  OANDA_TOKEN=xyz make live # Test with real OANDA demo"