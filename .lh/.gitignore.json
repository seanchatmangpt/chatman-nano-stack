{
    "sourceFile": ".gitignore",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1753252796777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753252862025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+# Byte-compiled / optimized / DLL files\n+__pycache__/\n+*.py[cod]\n+*$py.class\n+\n+# C extensions\n+*.so\n+\n+# Distribution / packaging\n+.Python\n+build/\n+develop-eggs/\n+dist/\n+downloads/\n+eggs/\n+.eggs/\n+lib/\n+lib64/\n+parts/\n+sdist/\n+var/\n+wheels/\n+share/python-wheels/\n+*.egg-info/\n+.installed.cfg\n+*.egg\n+MANIFEST\n+\n+# PyInstaller\n+#  Usually these files are written by a python script from a template\n+#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n+*.manifest\n+*.spec\n+\n+# Installer logs\n+pip-log.txt\n+pip-delete-this-directory.txt\n+\n+# Unit test / coverage reports\n+htmlcov/\n+.tox/\n+.nox/\n+.coverage\n+.coverage.*\n+.cache\n+nosetests.xml\n+coverage.xml\n+*.cover\n+*.py,cover\n+.hypothesis/\n+.pytest_cache/\n+cover/\n+\n+# Translations\n+*.mo\n+*.pot\n+\n+# Django stuff:\n+*.log\n+local_settings.py\n+db.sqlite3\n+db.sqlite3-journal\n+\n+# Flask stuff:\n+instance/\n+.webassets-cache\n+\n+# Scrapy stuff:\n+.scrapy\n+\n+# Sphinx documentation\n+docs/_build/\n+\n+# PyBuilder\n+.pybuilder/\n+target/\n+\n+# Jupyter Notebook\n+.ipynb_checkpoints\n+\n+# IPython\n+profile_default/\n+ipython_config.py\n+\n+# pyenv\n+#   For a library or package, you might want to ignore these files since the code is\n+#   intended to run in multiple environments; otherwise, check them in:\n+# .python-version\n+\n+# pipenv\n+#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n+#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n+#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n+#   install all needed dependencies.\n+#Pipfile.lock\n+\n+# poetry\n+#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n+#   This is especially recommended for binary packages to ensure reproducibility, and is more\n+#   commonly ignored for libraries.\n+#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n+#poetry.lock\n+\n+# pdm\n+#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n+#pdm.lock\n+#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n+#   in version control.\n+#   https://pdm.fming.dev/#use-with-ide\n+.pdm.toml\n+\n+# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n+__pypackages__/\n+\n+# Celery stuff\n+celerybeat-schedule\n+celerybeat.pid\n+\n+# SageMath parsed files\n+*.sage.py\n+\n+# Environments\n+.env\n+.venv\n+env/\n+venv/\n+ENV/\n+env.bak/\n+venv.bak/\n+\n+# Spyder project settings\n+.spyderproject\n+.spyproject\n+\n+# Rope project settings\n+.ropeproject\n+\n+# mkdocs documentation\n+/site\n+\n+# mypy\n+.mypy_cache/\n+.dmypy.json\n+dmypy.json\n+\n+# Pyre type checker\n+.pyre/\n+\n+# pytype static type analyzer\n+.pytype/\n+\n+# Cython debug symbols\n+cython_debug/\n+\n+# PyCharm\n+#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n+#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm\n+#  project, it is recommended to include the following files:\n+#  .idea/\n+#  *.iml\n+#  *.ipr\n+#  *.iws\n+.idea/\n+*.iml\n+*.ipr\n+*.iws\n+\n+# VS Code\n+.vscode/\n+\n+# C/C++ specific ignores\n+# Prerequisites\n+*.d\n+\n+# Compiled Object files\n+*.slo\n+*.lo\n+*.o\n+*.obj\n+\n+# Precompiled Headers\n+*.gch\n+*.pch\n+\n+# Compiled Dynamic libraries\n+*.so\n+*.dylib\n+*.dll\n+\n+# Fortran module files\n+*.mod\n+*.smod\n+\n+# Compiled Static libraries\n+*.lai\n+*.la\n+*.a\n+*.lib\n+\n+# Executables\n+*.exe\n+*.out\n+*.app\n+\n+# Build directories\n+build/\n+out/\n+target/\n+cmake-build-*/\n+\n+# CMake\n+CMakeCache.txt\n+CMakeFiles/\n+cmake_install.cmake\n+Makefile\n+*.cmake\n+!CMakeLists.txt\n+\n+# Autotools\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+config.h.in\n+configure\n+libtool\n+stamp-h1\n+\n+# IDE and Editor files\n+*.swp\n+*.swo\n+*~\n+.DS_Store\n+Thumbs.db\n+\n+# Temporary files\n+*.tmp\n+*.temp\n+*.bak\n+*.backup\n+\n+# Log files\n+*.log\n+logs/\n+\n+# Database files\n+*.db\n+*.sqlite\n+*.sqlite3\n+\n+# Documentation build\n+docs/build/\n+docs/_build/\n+\n+# Test artifacts\n+test_results/\n+*.test\n+*.prof\n+\n+# Coverage reports\n+*.gcov\n+*.gcda\n+*.gcno\n+\n+# Valgrind output\n+*.valgrind\n+\n+# GDB\n+*.gdb\n+\n+# Core dumps\n+core\n+core.*\n+\n+# Project specific\n+# Generated files from your compilers\n+owl_compiler_tests/generated_code/\n+simple_test.dSYM/\n+benchmark_demo\n+simple_test\n+sparql_compiler\n+\n+# Python cache\n+__pycache__/\n+*.pyc\n+\n+# Session files (excluding chatman-nano-stack-context)\n+# session_state.json\n+# session_recovery.spr\n+\n+# Local development files (excluding chatman-nano-stack-context)\n+# .lh/\n+# current.link \n\\ No newline at end of file\n"
                },
                {
                    "date": 1753252959652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -287,298 +287,6 @@\n # session_state.json\n # session_recovery.spr\n \n # Local development files (excluding chatman-nano-stack-context)\n-# .lh/\n-# current.link \n-# Byte-compiled / optimized / DLL files\n-__pycache__/\n-*.py[cod]\n-*$py.class\n-\n-# C extensions\n-*.so\n-\n-# Distribution / packaging\n-.Python\n-build/\n-develop-eggs/\n-dist/\n-downloads/\n-eggs/\n-.eggs/\n-lib/\n-lib64/\n-parts/\n-sdist/\n-var/\n-wheels/\n-share/python-wheels/\n-*.egg-info/\n-.installed.cfg\n-*.egg\n-MANIFEST\n-\n-# PyInstaller\n-#  Usually these files are written by a python script from a template\n-#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n-*.manifest\n-*.spec\n-\n-# Installer logs\n-pip-log.txt\n-pip-delete-this-directory.txt\n-\n-# Unit test / coverage reports\n-htmlcov/\n-.tox/\n-.nox/\n-.coverage\n-.coverage.*\n-.cache\n-nosetests.xml\n-coverage.xml\n-*.cover\n-*.py,cover\n-.hypothesis/\n-.pytest_cache/\n-cover/\n-\n-# Translations\n-*.mo\n-*.pot\n-\n-# Django stuff:\n-*.log\n-local_settings.py\n-db.sqlite3\n-db.sqlite3-journal\n-\n-# Flask stuff:\n-instance/\n-.webassets-cache\n-\n-# Scrapy stuff:\n-.scrapy\n-\n-# Sphinx documentation\n-docs/_build/\n-\n-# PyBuilder\n-.pybuilder/\n-target/\n-\n-# Jupyter Notebook\n-.ipynb_checkpoints\n-\n-# IPython\n-profile_default/\n-ipython_config.py\n-\n-# pyenv\n-#   For a library or package, you might want to ignore these files since the code is\n-#   intended to run in multiple environments; otherwise, check them in:\n-# .python-version\n-\n-# pipenv\n-#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n-#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n-#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n-#   install all needed dependencies.\n-#Pipfile.lock\n-\n-# poetry\n-#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n-#   This is especially recommended for binary packages to ensure reproducibility, and is more\n-#   commonly ignored for libraries.\n-#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n-#poetry.lock\n-\n-# pdm\n-#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n-#pdm.lock\n-#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n-#   in version control.\n-#   https://pdm.fming.dev/#use-with-ide\n-.pdm.toml\n-\n-# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n-__pypackages__/\n-\n-# Celery stuff\n-celerybeat-schedule\n-celerybeat.pid\n-\n-# SageMath parsed files\n-*.sage.py\n-\n-# Environments\n-.env\n-.venv\n-env/\n-venv/\n-ENV/\n-env.bak/\n-venv.bak/\n-\n-# Spyder project settings\n-.spyderproject\n-.spyproject\n-\n-# Rope project settings\n-.ropeproject\n-\n-# mkdocs documentation\n-/site\n-\n-# mypy\n-.mypy_cache/\n-.dmypy.json\n-dmypy.json\n-\n-# Pyre type checker\n-.pyre/\n-\n-# pytype static type analyzer\n-.pytype/\n-\n-# Cython debug symbols\n-cython_debug/\n-\n-# PyCharm\n-#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n-#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm\n-#  project, it is recommended to include the following files:\n-#  .idea/\n-#  *.iml\n-#  *.ipr\n-#  *.iws\n-.idea/\n-*.iml\n-*.ipr\n-*.iws\n-\n-# VS Code\n-.vscode/\n-\n-# C/C++ specific ignores\n-# Prerequisites\n-*.d\n-\n-# Compiled Object files\n-*.slo\n-*.lo\n-*.o\n-*.obj\n-\n-# Precompiled Headers\n-*.gch\n-*.pch\n-\n-# Compiled Dynamic libraries\n-*.so\n-*.dylib\n-*.dll\n-\n-# Fortran module files\n-*.mod\n-*.smod\n-\n-# Compiled Static libraries\n-*.lai\n-*.la\n-*.a\n-*.lib\n-\n-# Executables\n-*.exe\n-*.out\n-*.app\n-\n-# Build directories\n-build/\n-out/\n-target/\n-cmake-build-*/\n-\n-# CMake\n-CMakeCache.txt\n-CMakeFiles/\n-cmake_install.cmake\n-Makefile\n-*.cmake\n-!CMakeLists.txt\n-\n-# Autotools\n-Makefile.in\n-aclocal.m4\n-autom4te.cache/\n-config.h.in\n-configure\n-libtool\n-stamp-h1\n-\n-# IDE and Editor files\n-*.swp\n-*.swo\n-*~\n-.DS_Store\n-Thumbs.db\n-\n-# Temporary files\n-*.tmp\n-*.temp\n-*.bak\n-*.backup\n-\n-# Log files\n-*.log\n-logs/\n-\n-# Database files\n-*.db\n-*.sqlite\n-*.sqlite3\n-\n-# Documentation build\n-docs/build/\n-docs/_build/\n-\n-# Test artifacts\n-test_results/\n-*.test\n-*.prof\n-\n-# Coverage reports\n-*.gcov\n-*.gcda\n-*.gcno\n-\n-# Valgrind output\n-*.valgrind\n-\n-# GDB\n-*.gdb\n-\n-# Core dumps\n-core\n-core.*\n-\n-# Project specific\n-# Generated files from your compilers\n-owl_compiler_tests/generated_code/\n-simple_test.dSYM/\n-benchmark_demo\n-simple_test\n-sparql_compiler\n-\n-# Python cache\n-__pycache__/\n-*.pyc\n-\n-# Session files\n-session_state.json\n-session_recovery.spr\n-\n-# Local development files\n .lh/\n-current.link \n\\ No newline at end of file\n+# current.link \n\\ No newline at end of file\n"
                }
            ],
            "date": 1753252796777,
            "name": "Commit-0",
            "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm\n#  project, it is recommended to include the following files:\n#  .idea/\n#  *.iml\n#  *.ipr\n#  *.iws\n.idea/\n*.iml\n*.ipr\n*.iws\n\n# VS Code\n.vscode/\n\n# C/C++ specific ignores\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# Build directories\nbuild/\nout/\ntarget/\ncmake-build-*/\n\n# CMake\nCMakeCache.txt\nCMakeFiles/\ncmake_install.cmake\nMakefile\n*.cmake\n!CMakeLists.txt\n\n# Autotools\nMakefile.in\naclocal.m4\nautom4te.cache/\nconfig.h.in\nconfigure\nlibtool\nstamp-h1\n\n# IDE and Editor files\n*.swp\n*.swo\n*~\n.DS_Store\nThumbs.db\n\n# Temporary files\n*.tmp\n*.temp\n*.bak\n*.backup\n\n# Log files\n*.log\nlogs/\n\n# Database files\n*.db\n*.sqlite\n*.sqlite3\n\n# Documentation build\ndocs/build/\ndocs/_build/\n\n# Test artifacts\ntest_results/\n*.test\n*.prof\n\n# Coverage reports\n*.gcov\n*.gcda\n*.gcno\n\n# Valgrind output\n*.valgrind\n\n# GDB\n*.gdb\n\n# Core dumps\ncore\ncore.*\n\n# Project specific\n# Generated files from your compilers\nowl_compiler_tests/generated_code/\nsimple_test.dSYM/\nbenchmark_demo\nsimple_test\nsparql_compiler\n\n# Python cache\n__pycache__/\n*.pyc\n\n# Session files\nsession_state.json\nsession_recovery.spr\n\n# Local development files\n.lh/\ncurrent.link "
        }
    ]
}