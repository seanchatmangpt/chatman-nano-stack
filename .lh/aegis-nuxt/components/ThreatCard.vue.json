{
    "sourceFile": "aegis-nuxt/components/ThreatCard.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1753419925191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753420072273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+<template>\n+  <div class=\"threat-card cyber-card\" :class=\"getThreatCardClass()\">\n+    <div class=\"flex items-center justify-between\">\n+      <div class=\"flex-1\">\n+        <div class=\"flex items-center space-x-3\">\n+          <div\n+            class=\"w-3 h-3 rounded-full\"\n+            :class=\"getThreatIndicatorClass()\"\n+          ></div>\n+          <div>\n+            <h4 class=\"font-semibold text-white\">{{ threat.label }}</h4>\n+            <p class=\"text-sm text-gray-400\">\n+              {{ threat.threatID || threat.id }}\n+            </p>\n+          </div>\n+        </div>\n+\n+        <div class=\"mt-2 flex items-center space-x-4 text-xs\">\n+          <span class=\"px-2 py-1 rounded\" :class=\"getSeverityClass()\">\n+            {{ threat.severity }}\n+          </span>\n+          <span class=\"text-gray-400\">\n+            {{ formatDate(threat.firstSeen || new Date()) }}\n+          </span>\n+          <span v-if=\"threat.targetType\" class=\"text-cyber-blue\">\n+            {{ threat.targetType }}\n+          </span>\n+        </div>\n+      </div>\n+\n+      <div class=\"flex items-center space-x-2\">\n+        <button\n+          v-if=\"threat.status === 'active'\"\n+          @click=\"$emit('neutralize', threat.id)\"\n+          class=\"px-3 py-1 text-xs bg-cyber-green text-black rounded hover:bg-cyber-green/80 transition-colors\"\n+        >\n+          Neutralize\n+        </button>\n+        <span\n+          v-else\n+          class=\"px-3 py-1 text-xs rounded\"\n+          :class=\"getStatusClass()\"\n+        >\n+          {{ threat.status }}\n+        </span>\n+      </div>\n+    </div>\n+  </div>\n+</template>\n+\n+<script setup lang=\"ts\">\n+import type { Threat } from \"~/types/aegis\";\n+\n+interface Props {\n+  threat: Threat | any;\n+}\n+\n+interface Emits {\n+  (e: \"neutralize\", threatId: string): void;\n+}\n+\n+const props = defineProps<Props>();\n+const emit = defineEmits<Emits>();\n+\n+const getThreatCardClass = () => {\n+  if (props.threat.status === \"neutralized\") {\n+    return \"opacity-60\";\n+  }\n+  return \"\";\n+};\n+\n+const getThreatIndicatorClass = () => {\n+  switch (props.threat.severity) {\n+    case \"critical\":\n+      return \"bg-cyber-red animate-pulse\";\n+    case \"high\":\n+      return \"bg-orange-600 animate-pulse\";\n+    case \"medium\":\n+      return \"bg-cyber-yellow\";\n+    case \"low\":\n+      return \"bg-cyber-green\";\n+    default:\n+      return \"bg-gray-500\";\n+  }\n+};\n+\n+const getSeverityClass = () => {\n+  switch (props.threat.severity) {\n+    case \"critical\":\n+      return \"threat-critical\";\n+    case \"high\":\n+      return \"threat-high\";\n+    case \"medium\":\n+      return \"threat-medium\";\n+    case \"low\":\n+      return \"threat-low\";\n+    default:\n+      return \"bg-gray-600 text-white\";\n+  }\n+};\n+\n+const getStatusClass = () => {\n+  switch (props.threat.status) {\n+    case \"neutralized\":\n+      return \"bg-cyber-green text-black\";\n+    case \"investigating\":\n+      return \"bg-cyber-yellow text-black\";\n+    default:\n+      return \"bg-gray-600 text-white\";\n+  }\n+};\n+\n+const formatDate = (date: Date) => {\n+  return new Intl.DateTimeFormat(\"en-US\", {\n+    month: \"short\",\n+    day: \"numeric\",\n+    hour: \"2-digit\",\n+    minute: \"2-digit\",\n+  }).format(date);\n+};\n+</script>\n"
                }
            ],
            "date": 1753419925191,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"threat-card cyber-card\" :class=\"getThreatCardClass()\">\n    <div class=\"flex items-center justify-between\">\n      <div class=\"flex-1\">\n        <div class=\"flex items-center space-x-3\">\n          <div class=\"w-3 h-3 rounded-full\" :class=\"getThreatIndicatorClass()\"></div>\n          <div>\n            <h4 class=\"font-semibold text-white\">{{ threat.label }}</h4>\n            <p class=\"text-sm text-gray-400\">{{ threat.threatID || threat.id }}</p>\n          </div>\n        </div>\n        \n        <div class=\"mt-2 flex items-center space-x-4 text-xs\">\n          <span class=\"px-2 py-1 rounded\" :class=\"getSeverityClass()\">\n            {{ threat.severity }}\n          </span>\n          <span class=\"text-gray-400\">\n            {{ formatDate(threat.firstSeen || new Date()) }}\n          </span>\n          <span v-if=\"threat.targetType\" class=\"text-cyber-blue\">\n            {{ threat.targetType }}\n          </span>\n        </div>\n      </div>\n      \n      <div class=\"flex items-center space-x-2\">\n        <button\n          v-if=\"threat.status === 'active'\"\n          @click=\"$emit('neutralize', threat.id)\"\n          class=\"px-3 py-1 text-xs bg-cyber-green text-black rounded hover:bg-cyber-green/80 transition-colors\"\n        >\n          Neutralize\n        </button>\n        <span v-else class=\"px-3 py-1 text-xs rounded\" :class=\"getStatusClass()\">\n          {{ threat.status }}\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { Threat } from '~/types/aegis'\n\ninterface Props {\n  threat: Threat\n}\n\ninterface Emits {\n  (e: 'neutralize', threatId: string): void\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<Emits>()\n\nconst getThreatCardClass = () => {\n  if (props.threat.status === 'neutralized') {\n    return 'opacity-60'\n  }\n  return ''\n}\n\nconst getThreatIndicatorClass = () => {\n  switch (props.threat.severity) {\n    case 'critical':\n      return 'bg-cyber-red animate-pulse'\n    case 'high':\n      return 'bg-orange-600 animate-pulse'\n    case 'medium':\n      return 'bg-cyber-yellow'\n    case 'low':\n      return 'bg-cyber-green'\n    default:\n      return 'bg-gray-500'\n  }\n}\n\nconst getSeverityClass = () => {\n  switch (props.threat.severity) {\n    case 'critical':\n      return 'threat-critical'\n    case 'high':\n      return 'threat-high'\n    case 'medium':\n      return 'threat-medium'\n    case 'low':\n      return 'threat-low'\n    default:\n      return 'bg-gray-600 text-white'\n  }\n}\n\nconst getStatusClass = () => {\n  switch (props.threat.status) {\n    case 'neutralized':\n      return 'bg-cyber-green text-black'\n    case 'investigating':\n      return 'bg-cyber-yellow text-black'\n    default:\n      return 'bg-gray-600 text-white'\n  }\n}\n\nconst formatDate = (date: Date) => {\n  return new Intl.DateTimeFormat('en-US', {\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(date)\n}\n</script> "
        }
    ]
}