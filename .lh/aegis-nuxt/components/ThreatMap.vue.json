{
    "sourceFile": "aegis-nuxt/components/ThreatMap.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1753419895190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753420078835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,54 @@\n <template>\n   <div class=\"threat-map cyber-card\">\n     <h3 class=\"text-lg font-semibold mb-4 text-cyber-blue\">üåê Threat Map</h3>\n-    \n+\n     <!-- Map Container -->\n-    <div class=\"relative h-80 bg-cyber-dark border border-cyber-blue/20 rounded-lg overflow-hidden\">\n+    <div\n+      class=\"relative h-80 bg-cyber-dark border border-cyber-blue/20 rounded-lg overflow-hidden\"\n+    >\n       <!-- Grid Background -->\n       <div class=\"absolute inset-0 opacity-10\">\n         <svg width=\"100%\" height=\"100%\">\n           <defs>\n-            <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n-              <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#00d4ff\" stroke-width=\"1\"/>\n+            <pattern\n+              id=\"grid\"\n+              width=\"40\"\n+              height=\"40\"\n+              patternUnits=\"userSpaceOnUse\"\n+            >\n+              <path\n+                d=\"M 40 0 L 0 0 0 40\"\n+                fill=\"none\"\n+                stroke=\"#00d4ff\"\n+                stroke-width=\"1\"\n+              />\n             </pattern>\n           </defs>\n           <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n         </svg>\n       </div>\n-      \n+\n       <!-- Threat Nodes -->\n-      <div \n-        v-for=\"threat in threats\" \n+      <div\n+        v-for=\"threat in threats\"\n         :key=\"threat.id\"\n         class=\"absolute w-3 h-3 rounded-full cursor-pointer transition-all duration-300\"\n         :class=\"getThreatClass(threat)\"\n         :style=\"getThreatPosition(threat)\"\n         @click=\"$emit('threat-selected', threat)\"\n         :title=\"`${threat.label} - ${threat.severity}`\"\n       >\n-        <div class=\"w-full h-full rounded-full animate-ping\" :class=\"getThreatPingClass(threat)\"></div>\n+        <div\n+          class=\"w-full h-full rounded-full animate-ping\"\n+          :class=\"getThreatPingClass(threat)\"\n+        ></div>\n       </div>\n-      \n+\n       <!-- Legend -->\n-      <div class=\"absolute bottom-4 left-4 bg-cyber-gray/90 backdrop-blur-sm rounded-lg p-3 border border-cyber-blue/20\">\n+      <div\n+        class=\"absolute bottom-4 left-4 bg-cyber-gray/90 backdrop-blur-sm rounded-lg p-3 border border-cyber-blue/20\"\n+      >\n         <div class=\"text-xs space-y-1\">\n           <div class=\"flex items-center space-x-2\">\n             <div class=\"w-2 h-2 rounded-full bg-cyber-red\"></div>\n             <span>Critical</span>\n@@ -54,67 +71,67 @@\n   </div>\n </template>\n \n <script setup lang=\"ts\">\n-import type { Threat } from '~/types/aegis'\n+import type { Threat } from \"~/types/aegis\";\n \n interface Props {\n-  threats: Threat[]\n-  updateInterval?: number\n+  threats: (Threat | any)[];\n+  updateInterval?: number;\n }\n \n interface Emits {\n-  (e: 'threat-selected', threat: Threat): void\n+  (e: \"threat-selected\", threat: Threat): void;\n }\n \n const props = withDefaults(defineProps<Props>(), {\n-  updateInterval: 100\n-})\n+  updateInterval: 100,\n+});\n \n-const emit = defineEmits<Emits>()\n+const emit = defineEmits<Emits>();\n \n const getThreatClass = (threat: Threat) => {\n   switch (threat.severity) {\n-    case 'critical':\n-      return 'bg-cyber-red border-cyber-red'\n-    case 'high':\n-      return 'bg-orange-600 border-orange-600'\n-    case 'medium':\n-      return 'bg-cyber-yellow border-cyber-yellow'\n-    case 'low':\n-      return 'bg-cyber-green border-cyber-green'\n+    case \"critical\":\n+      return \"bg-cyber-red border-cyber-red\";\n+    case \"high\":\n+      return \"bg-orange-600 border-orange-600\";\n+    case \"medium\":\n+      return \"bg-cyber-yellow border-cyber-yellow\";\n+    case \"low\":\n+      return \"bg-cyber-green border-cyber-green\";\n     default:\n-      return 'bg-gray-500 border-gray-500'\n+      return \"bg-gray-500 border-gray-500\";\n   }\n-}\n+};\n \n const getThreatPingClass = (threat: Threat) => {\n   switch (threat.severity) {\n-    case 'critical':\n-      return 'bg-cyber-red'\n-    case 'high':\n-      return 'bg-orange-600'\n-    case 'medium':\n-      return 'bg-cyber-yellow'\n-    case 'low':\n-      return 'bg-cyber-green'\n+    case \"critical\":\n+      return \"bg-cyber-red\";\n+    case \"high\":\n+      return \"bg-orange-600\";\n\\ No newline at end of file\n+    case \"medium\":\n+      return \"bg-cyber-yellow\";\n+    case \"low\":\n+      return \"bg-cyber-green\";\n     default:\n-      return 'bg-gray-500'\n+      return \"bg-gray-500\";\n   }\n-}\n+};\n \n const getThreatPosition = (threat: Threat) => {\n   // Generate pseudo-random but consistent positions based on threat ID\n-  const hash = threat.id.split('').reduce((a, b) => {\n-    a = ((a << 5) - a) + b.charCodeAt(0)\n-    return a & a\n-  }, 0)\n-  \n-  const x = Math.abs(hash) % 80 + 10 // 10-90%\n-  const y = Math.abs(hash * 2) % 70 + 15 // 15-85%\n-  \n+  const hash = threat.id.split(\"\").reduce((a, b) => {\n+    a = (a << 5) - a + b.charCodeAt(0);\n+    return a & a;\n+  }, 0);\n+\n+  const x = (Math.abs(hash) % 80) + 10; // 10-90%\n+  const y = (Math.abs(hash * 2) % 70) + 15; // 15-85%\n+\n   return {\n     left: `${x}%`,\n-    top: `${y}%`\n-  }\n-}\n-</script> \n+    top: `${y}%`,\n+  };\n+};\n+</script>\n"
                }
            ],
            "date": 1753419895190,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"threat-map cyber-card\">\n    <h3 class=\"text-lg font-semibold mb-4 text-cyber-blue\">üåê Threat Map</h3>\n    \n    <!-- Map Container -->\n    <div class=\"relative h-80 bg-cyber-dark border border-cyber-blue/20 rounded-lg overflow-hidden\">\n      <!-- Grid Background -->\n      <div class=\"absolute inset-0 opacity-10\">\n        <svg width=\"100%\" height=\"100%\">\n          <defs>\n            <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n              <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#00d4ff\" stroke-width=\"1\"/>\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n        </svg>\n      </div>\n      \n      <!-- Threat Nodes -->\n      <div \n        v-for=\"threat in threats\" \n        :key=\"threat.id\"\n        class=\"absolute w-3 h-3 rounded-full cursor-pointer transition-all duration-300\"\n        :class=\"getThreatClass(threat)\"\n        :style=\"getThreatPosition(threat)\"\n        @click=\"$emit('threat-selected', threat)\"\n        :title=\"`${threat.label} - ${threat.severity}`\"\n      >\n        <div class=\"w-full h-full rounded-full animate-ping\" :class=\"getThreatPingClass(threat)\"></div>\n      </div>\n      \n      <!-- Legend -->\n      <div class=\"absolute bottom-4 left-4 bg-cyber-gray/90 backdrop-blur-sm rounded-lg p-3 border border-cyber-blue/20\">\n        <div class=\"text-xs space-y-1\">\n          <div class=\"flex items-center space-x-2\">\n            <div class=\"w-2 h-2 rounded-full bg-cyber-red\"></div>\n            <span>Critical</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <div class=\"w-2 h-2 rounded-full bg-orange-600\"></div>\n            <span>High</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <div class=\"w-2 h-2 rounded-full bg-cyber-yellow\"></div>\n            <span>Medium</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <div class=\"w-2 h-2 rounded-full bg-cyber-green\"></div>\n            <span>Low</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { Threat } from '~/types/aegis'\n\ninterface Props {\n  threats: Threat[]\n  updateInterval?: number\n}\n\ninterface Emits {\n  (e: 'threat-selected', threat: Threat): void\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  updateInterval: 100\n})\n\nconst emit = defineEmits<Emits>()\n\nconst getThreatClass = (threat: Threat) => {\n  switch (threat.severity) {\n    case 'critical':\n      return 'bg-cyber-red border-cyber-red'\n    case 'high':\n      return 'bg-orange-600 border-orange-600'\n    case 'medium':\n      return 'bg-cyber-yellow border-cyber-yellow'\n    case 'low':\n      return 'bg-cyber-green border-cyber-green'\n    default:\n      return 'bg-gray-500 border-gray-500'\n  }\n}\n\nconst getThreatPingClass = (threat: Threat) => {\n  switch (threat.severity) {\n    case 'critical':\n      return 'bg-cyber-red'\n    case 'high':\n      return 'bg-orange-600'\n    case 'medium':\n      return 'bg-cyber-yellow'\n    case 'low':\n      return 'bg-cyber-green'\n    default:\n      return 'bg-gray-500'\n  }\n}\n\nconst getThreatPosition = (threat: Threat) => {\n  // Generate pseudo-random but consistent positions based on threat ID\n  const hash = threat.id.split('').reduce((a, b) => {\n    a = ((a << 5) - a) + b.charCodeAt(0)\n    return a & a\n  }, 0)\n  \n  const x = Math.abs(hash) % 80 + 10 // 10-90%\n  const y = Math.abs(hash * 2) % 70 + 15 // 15-85%\n  \n  return {\n    left: `${x}%`,\n    top: `${y}%`\n  }\n}\n</script> "
        }
    ]
}