{
    "sourceFile": "pyproject.toml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1753290977902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753291192579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,235 @@\n+[project]\n+name = \"cns\"\n+version = \"8.0.0\"\n+description = \"Computational Narrative System - Semantic AOT Compiler for Real-Time Systems\"\n+authors = [\n+    { name = \"James I. Chatman\", email = \"james@chatman.ai\" },\n+    { name = \"Sean A. Chatman\", email = \"sean@chatman.ai\" },\n+]\n+readme = \"README.md\"\n+license = { text = \"Proprietary\" }\n+requires-python = \">=3.8\"\n+keywords = [\n+    \"semantic-web\",\n+    \"ontology\",\n+    \"realtime\",\n+    \"aot-compiler\",\n+    \"owl\",\n+    \"ttl\",\n+    \"c-codegen\",\n+    \"ultra-low-latency\",\n+]\n+classifiers = [\n+    \"Development Status :: 5 - Production/Stable\",\n+    \"Intended Audience :: Developers\",\n+    \"Intended Audience :: Information Technology\",\n+    \"Topic :: Software Development :: Code Generators\",\n+    \"Topic :: Software Development :: Compilers\",\n+    \"Topic :: System :: Real Time\",\n+    \"Programming Language :: Python :: 3\",\n+    \"Programming Language :: Python :: 3.8\",\n+    \"Programming Language :: Python :: 3.9\",\n+    \"Programming Language :: Python :: 3.10\",\n+    \"Programming Language :: Python :: 3.11\",\n+    \"Programming Language :: Python :: 3.12\",\n+]\n+\n+dependencies = [\n+    # Core semantic processing\n+    \"rdflib>=7.0.0\",\n+    \"rdflib-jsonld>=0.6.2\",\n+\n+    # Template engine for C code generation\n+    \"jinja2>=3.1.0\",\n+\n+    # DSPy integration for neural reasoning\n+    \"dspy-ai>=2.4.0\",\n+\n+    # Performance and monitoring  \n+    \"opentelemetry-api>=1.12.0\",\n+    \"opentelemetry-sdk>=1.12.0\",\n+\n+    # Development and testing\n+    \"pytest>=7.0.0\",\n+    \"pytest-benchmark>=4.0.0\",\n+    \"pytest-cov>=4.0.0\",\n+\n+    # Type checking and linting\n+    \"mypy>=1.5.0\",\n+    \"black>=23.0.0\",\n+    \"ruff>=0.1.0\",\n+\n+    # Configuration and CLI\n+    \"pydantic>=2.0.0\",\n+    \"typer>=0.9.0\",\n+    \"rich>=13.0.0\",\n+    \"psutil>=5.9.0\",\n+\n+    # Data processing\n+    \"pyyaml>=6.0.0\",\n+    \"toml>=0.10.2\",\n+]\n+\n+[project.optional-dependencies]\n+dev = [\n+    \"pre-commit>=3.0.0\",\n+    \"tox>=4.0.0\",\n+    \"sphinx>=7.0.0\",\n+    \"sphinx-rtd-theme>=1.3.0\",\n+]\n+\n+benchmark = [\"psutil>=5.9.0\", \"memory-profiler>=0.61.0\", \"py-spy>=0.3.14\"]\n+\n+realtime = [\"numpy>=1.24.0\", \"pandas>=2.0.0\", \"scipy>=1.10.0\"]\n+\n+[project.urls]\n+Homepage = \"https://github.com/chatmangpt/cns\"\n+Documentation = \"https://cns.chatman.ai/docs\"\n+Repository = \"https://github.com/chatmangpt/cns.git\"\n+Issues = \"https://github.com/chatmangpt/cns/issues\"\n+\n+[project.scripts]\n+cns-compile = \"owl_compiler:main\"\n+cns-benchmark = \"run_benchmark:main\"\n+cns-validate = \"aot_lifecycle:main\"\n+cns-status = \"cns_status:main\"\n+ttl2dspy = \"ttl2dspy:main\"\n+\n+[build-system]\n+requires = [\"hatchling\"]\n+build-backend = \"hatchling.build\"\n+\n+[tool.hatch.build.targets.wheel]\n+packages = [\"src/cns\", \"ontologies\", \"generated_c\"]\n+\n+[tool.uv]\n+dev-dependencies = [\n+    \"pre-commit>=3.0.0\",\n+    \"pytest>=7.0.0\",\n+    \"pytest-benchmark>=4.0.0\",\n+    \"mypy>=1.5.0\",\n+    \"black>=23.0.0\",\n+    \"ruff>=0.1.0\",\n+]\n+\n+[tool.uv.workspace]\n+members = [\"hyperintel-ttl2dspy\"]\n+\n+[tool.black]\n+line-length = 100\n+target-version = ['py38', 'py39', 'py310', 'py311', 'py312']\n+include = '\\.pyi?$'\n+extend-exclude = '''\n+/(\n+    \\.eggs\n+  | \\.git\n+  | \\.hg\n+  | \\.mypy_cache\n+  | \\.tox\n+  | \\.venv\n+  | _build\n+  | buck-out\n+  | build\n+  | dist\n+  | generated_c\n+  | v8/include\n+)/\n+'''\n+\n+[tool.ruff]\n+line-length = 100\n+target-version = \"py38\"\n+\n+[tool.ruff.lint]\n+select = [\n+    \"E\",  # pycodestyle errors\n+    \"W\",  # pycodestyle warnings\n+    \"F\",  # pyflakes\n+    \"I\",  # isort\n+    \"B\",  # flake8-bugbear\n+    \"C4\", # flake8-comprehensions\n+    \"UP\", # pyupgrade\n+]\n+ignore = [\n+    \"E501\", # line too long, handled by black\n+    \"B008\", # do not perform function calls in argument defaults\n+    \"C901\", # too complex\n+]\n+exclude = [\n+    \".bzr\",\n+    \".direnv\",\n+    \".eggs\",\n+    \".git\",\n+    \".git-rewrite\",\n+    \".hg\",\n+    \".mypy_cache\",\n+    \".nox\",\n+    \".pants.d\",\n+    \".pytype\",\n+    \".ruff_cache\",\n+    \".svn\",\n+    \".tox\",\n+    \".venv\",\n+    \"__pypackages__\",\n+    \"_build\",\n+    \"buck-out\",\n+    \"build\",\n+    \"dist\",\n+    \"node_modules\",\n+    \"venv\",\n+    \"generated_c\",\n+    \"v8/include\",\n+]\n+\n+[tool.ruff.lint.per-file-ignores]\n+\"__init__.py\" = [\"F401\"]\n+\"test_*.py\" = [\"B011\"]\n+\n+[tool.mypy]\n+python_version = \"3.8\"\n+warn_return_any = true\n+warn_unused_configs = true\n+disallow_untyped_defs = true\n+disallow_incomplete_defs = true\n+check_untyped_defs = true\n+disallow_untyped_decorators = true\n+no_implicit_optional = true\n+warn_redundant_casts = true\n+warn_unused_ignores = true\n+warn_no_return = true\n+warn_unreachable = true\n+strict_equality = true\n+show_error_codes = true\n+\n+[[tool.mypy.overrides]]\n+module = [\"rdflib.*\", \"dspy.*\", \"opentelemetry.*\"]\n+ignore_missing_imports = true\n+\n+[tool.pytest.ini_options]\n+minversion = \"7.0\"\n+addopts = \"-ra -q --strict-markers --strict-config\"\n+testpaths = [\"tests\", \"owl_compiler_tests\"]\n+markers = [\n+    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n+    \"integration: marks tests as integration tests\",\n+    \"benchmark: marks tests as benchmark tests\",\n+    \"uhft: marks tests as ultra-high-frequency trading specific\",\n+]\n+\n+[tool.coverage.run]\n+source = [\"owl_compiler\", \"ttl2dspy\", \"aot_lifecycle\", \"run_benchmark\"]\n+omit = [\"*/tests/*\", \"*/test_*\", \"generated_c/*\", \"v8/*\"]\n+\n+[tool.coverage.report]\n+exclude_lines = [\n+    \"pragma: no cover\",\n+    \"def __repr__\",\n+    \"if self.debug:\",\n+    \"if settings.DEBUG\",\n+    \"raise AssertionError\",\n+    \"raise NotImplementedError\",\n+    \"if 0:\",\n+    \"if __name__ == .__main__.:\",\n+    \"class .*\\\\bProtocol\\\\):\",\n+    \"@(abc\\\\.)?abstractmethod\",\n+]\n"
                },
                {
                    "date": 1753291199105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,9 +212,9 @@\n markers = [\n     \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n     \"integration: marks tests as integration tests\",\n     \"benchmark: marks tests as benchmark tests\",\n-    \"uhft: marks tests as ultra-high-frequency trading specific\",\n+    \"realtime: marks tests as real-time system specific\",\n ]\n \n [tool.coverage.run]\n source = [\"owl_compiler\", \"ttl2dspy\", \"aot_lifecycle\", \"run_benchmark\"]\n@@ -232,261 +232,4 @@\n     \"if __name__ == .__main__.:\",\n     \"class .*\\\\bProtocol\\\\):\",\n     \"@(abc\\\\.)?abstractmethod\",\n ]\n-[project]\n-name = \"cns\"\n-version = \"8.0.0\"\n-description = \"Computational Narrative System - Semantic AOT Compiler for Real-Time Systems\"\n-authors = [\n-    { name = \"James I. Chatman\", email = \"james@chatman.ai\" },\n-    { name = \"Sean A. Chatman\", email = \"sean@chatman.ai\" },\n-]\n-readme = \"README.md\"\n-license = { text = \"Proprietary\" }\n-requires-python = \">=3.8\"\n-keywords = [\"semantic-web\", \"ontology\", \"realtime\", \"aot-compiler\", \"owl\", \"ttl\", \"c-codegen\", \"ultra-low-latency\"]\n-classifiers = [\n-    \"Development Status :: 5 - Production/Stable\",\n-    \"Intended Audience :: Developers\",\n-    \"Intended Audience :: Information Technology\",\n-    \"Topic :: Software Development :: Code Generators\",\n-    \"Topic :: Software Development :: Compilers\",\n-    \"Topic :: System :: Real Time\",\n-    \"Programming Language :: Python :: 3\",\n-    \"Programming Language :: Python :: 3.8\",\n-    \"Programming Language :: Python :: 3.9\",\n-    \"Programming Language :: Python :: 3.10\",\n-    \"Programming Language :: Python :: 3.11\",\n-    \"Programming Language :: Python :: 3.12\",\n-]\n-\n-dependencies = [\n-    # Core semantic processing\n-    \"rdflib>=7.0.0\",\n-    \"rdflib-jsonld>=0.6.2\",\n-    \n-    # Template engine for C code generation\n-    \"jinja2>=3.1.0\",\n-    \n-    # DSPy integration for neural reasoning\n-    \"dspy-ai>=2.4.0\",\n-    \n-    # Performance and monitoring  \n-    \"opentelemetry-api>=1.12.0\",\n-    \"opentelemetry-sdk>=1.12.0\",\n-    \n-    # Development and testing\n-    \"pytest>=7.0.0\",\n-    \"pytest-benchmark>=4.0.0\",\n-    \"pytest-cov>=4.0.0\",\n-    \n-    # Type checking and linting\n-    \"mypy>=1.5.0\",\n-    \"black>=23.0.0\",\n-    \"ruff>=0.1.0\",\n-    \n-    # Configuration and CLI\n-    \"pydantic>=2.0.0\",\n-    \"typer>=0.9.0\",\n-    \"rich>=13.0.0\",\n-    \"psutil>=5.9.0\",\n-    \n-    # Data processing\n-    \"pyyaml>=6.0.0\",\n-    \"toml>=0.10.2\",\n-]\n-\n-[project.optional-dependencies]\n-dev = [\n-    \"pre-commit>=3.0.0\",\n-    \"tox>=4.0.0\",\n-    \"sphinx>=7.0.0\",\n-    \"sphinx-rtd-theme>=1.3.0\",\n-]\n-\n-benchmark = [\n-    \"psutil>=5.9.0\",\n-    \"memory-profiler>=0.61.0\",\n-    \"py-spy>=0.3.14\",\n-]\n-\n-trading = [\n-    \"numpy>=1.24.0\",\n-    \"pandas>=2.0.0\",\n-    \"scipy>=1.10.0\",\n-]\n-\n-[project.urls]\n-Homepage = \"https://github.com/chatmangpt/cns\"\n-Documentation = \"https://cns.chatman.ai/docs\"\n-Repository = \"https://github.com/chatmangpt/cns.git\"\n-Issues = \"https://github.com/chatmangpt/cns/issues\"\n-\n-[project.scripts]\n-cns-compile = \"owl_compiler:main\"\n-cns-benchmark = \"run_benchmark:main\"\n-cns-validate = \"aot_lifecycle:main\"\n-cns-status = \"cns_status:main\"\n-ttl2dspy = \"ttl2dspy:main\"\n-\n-[build-system]\n-requires = [\"hatchling\"]\n-build-backend = \"hatchling.build\"\n-\n-[tool.hatch.build.targets.wheel]\n-packages = [\n-    \"src/cns\",\n-    \"ontologies\",\n-    \"generated_c\",\n-]\n-\n-[tool.uv]\n-dev-dependencies = [\n-    \"pre-commit>=3.0.0\",\n-    \"pytest>=7.0.0\",\n-    \"pytest-benchmark>=4.0.0\",\n-    \"mypy>=1.5.0\",\n-    \"black>=23.0.0\",\n-    \"ruff>=0.1.0\",\n-]\n-\n-[tool.uv.workspace]\n-members = [\n-    \"hyperintel-ttl2dspy\",\n-]\n-\n-[tool.black]\n-line-length = 100\n-target-version = ['py38', 'py39', 'py310', 'py311', 'py312']\n-include = '\\.pyi?$'\n-extend-exclude = '''\n-/(\n-    \\.eggs\n-  | \\.git\n-  | \\.hg\n-  | \\.mypy_cache\n-  | \\.tox\n-  | \\.venv\n-  | _build\n-  | buck-out\n-  | build\n-  | dist\n-  | generated_c\n-  | v8/include\n-)/\n-'''\n-\n-[tool.ruff]\n-line-length = 100\n-target-version = \"py38\"\n-\n-[tool.ruff.lint]\n-select = [\n-    \"E\",  # pycodestyle errors\n-    \"W\",  # pycodestyle warnings\n-    \"F\",  # pyflakes\n-    \"I\",  # isort\n-    \"B\",  # flake8-bugbear\n-    \"C4\", # flake8-comprehensions\n-    \"UP\", # pyupgrade\n-]\n-ignore = [\n-    \"E501\",  # line too long, handled by black\n-    \"B008\",  # do not perform function calls in argument defaults\n-    \"C901\",  # too complex\n-]\n-exclude = [\n-    \".bzr\",\n-    \".direnv\",\n-    \".eggs\",\n-    \".git\",\n-    \".git-rewrite\",\n-    \".hg\",\n-    \".mypy_cache\",\n-    \".nox\",\n-    \".pants.d\",\n-    \".pytype\",\n-    \".ruff_cache\",\n-    \".svn\",\n-    \".tox\",\n-    \".venv\",\n-    \"__pypackages__\",\n-    \"_build\",\n-    \"buck-out\",\n-    \"build\",\n-    \"dist\",\n-    \"node_modules\",\n-    \"venv\",\n-    \"generated_c\",\n-    \"v8/include\",\n-]\n-\n-[tool.ruff.lint.per-file-ignores]\n-\"__init__.py\" = [\"F401\"]\n-\"test_*.py\" = [\"B011\"]\n-\n-[tool.mypy]\n-python_version = \"3.8\"\n-warn_return_any = true\n-warn_unused_configs = true\n-disallow_untyped_defs = true\n-disallow_incomplete_defs = true\n-check_untyped_defs = true\n-disallow_untyped_decorators = true\n-no_implicit_optional = true\n-warn_redundant_casts = true\n-warn_unused_ignores = true\n-warn_no_return = true\n-warn_unreachable = true\n-strict_equality = true\n-show_error_codes = true\n-\n-[[tool.mypy.overrides]]\n-module = [\n-    \"rdflib.*\",\n-    \"dspy.*\",\n-    \"opentelemetry.*\",\n-]\n-ignore_missing_imports = true\n-\n-[tool.pytest.ini_options]\n-minversion = \"7.0\"\n-addopts = \"-ra -q --strict-markers --strict-config\"\n-testpaths = [\n-    \"tests\",\n-    \"owl_compiler_tests\",\n-]\n-markers = [\n-    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n-    \"integration: marks tests as integration tests\",\n-    \"benchmark: marks tests as benchmark tests\",\n-    \"uhft: marks tests as ultra-high-frequency trading specific\",\n-]\n-\n-[tool.coverage.run]\n-source = [\n-    \"owl_compiler\",\n-    \"ttl2dspy\", \n-    \"aot_lifecycle\",\n-    \"run_benchmark\",\n-]\n-omit = [\n-    \"*/tests/*\",\n-    \"*/test_*\",\n-    \"generated_c/*\",\n-    \"v8/*\",\n-]\n-\n-[tool.coverage.report]\n-exclude_lines = [\n-    \"pragma: no cover\",\n-    \"def __repr__\",\n-    \"if self.debug:\",\n-    \"if settings.DEBUG\",\n-    \"raise AssertionError\",\n-    \"raise NotImplementedError\",\n-    \"if 0:\",\n-    \"if __name__ == .__main__.:\",\n-    \"class .*\\\\bProtocol\\\\):\",\n-    \"@(abc\\\\.)?abstractmethod\",\n-]\n"
                }
            ],
            "date": 1753290977902,
            "name": "Commit-0",
            "content": "[project]\nname = \"cns\"\nversion = \"8.0.0\"\ndescription = \"Computational Narrative System - Semantic AOT Compiler for Real-Time Systems\"\nauthors = [\n    { name = \"James I. Chatman\", email = \"james@chatman.ai\" },\n    { name = \"Sean A. Chatman\", email = \"sean@chatman.ai\" },\n]\nreadme = \"README.md\"\nlicense = { text = \"Proprietary\" }\nrequires-python = \">=3.8\"\nkeywords = [\"semantic-web\", \"ontology\", \"realtime\", \"aot-compiler\", \"owl\", \"ttl\", \"c-codegen\", \"ultra-low-latency\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: Information Technology\",\n    \"Topic :: Software Development :: Code Generators\",\n    \"Topic :: Software Development :: Compilers\",\n    \"Topic :: System :: Real Time\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n]\n\ndependencies = [\n    # Core semantic processing\n    \"rdflib>=7.0.0\",\n    \"rdflib-jsonld>=0.6.2\",\n    \n    # Template engine for C code generation\n    \"jinja2>=3.1.0\",\n    \n    # DSPy integration for neural reasoning\n    \"dspy-ai>=2.4.0\",\n    \n    # Performance and monitoring  \n    \"opentelemetry-api>=1.12.0\",\n    \"opentelemetry-sdk>=1.12.0\",\n    \n    # Development and testing\n    \"pytest>=7.0.0\",\n    \"pytest-benchmark>=4.0.0\",\n    \"pytest-cov>=4.0.0\",\n    \n    # Type checking and linting\n    \"mypy>=1.5.0\",\n    \"black>=23.0.0\",\n    \"ruff>=0.1.0\",\n    \n    # Configuration and CLI\n    \"pydantic>=2.0.0\",\n    \"typer>=0.9.0\",\n    \"rich>=13.0.0\",\n    \"psutil>=5.9.0\",\n    \n    # Data processing\n    \"pyyaml>=6.0.0\",\n    \"toml>=0.10.2\",\n]\n\n[project.optional-dependencies]\ndev = [\n    \"pre-commit>=3.0.0\",\n    \"tox>=4.0.0\",\n    \"sphinx>=7.0.0\",\n    \"sphinx-rtd-theme>=1.3.0\",\n]\n\nbenchmark = [\n    \"psutil>=5.9.0\",\n    \"memory-profiler>=0.61.0\",\n    \"py-spy>=0.3.14\",\n]\n\ntrading = [\n    \"numpy>=1.24.0\",\n    \"pandas>=2.0.0\",\n    \"scipy>=1.10.0\",\n]\n\n[project.urls]\nHomepage = \"https://github.com/chatmangpt/cns\"\nDocumentation = \"https://cns.chatman.ai/docs\"\nRepository = \"https://github.com/chatmangpt/cns.git\"\nIssues = \"https://github.com/chatmangpt/cns/issues\"\n\n[project.scripts]\ncns-compile = \"owl_compiler:main\"\ncns-benchmark = \"run_benchmark:main\"\ncns-validate = \"aot_lifecycle:main\"\ncns-status = \"cns_status:main\"\nttl2dspy = \"ttl2dspy:main\"\n\n[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n\n[tool.hatch.build.targets.wheel]\npackages = [\n    \"src/cns\",\n    \"ontologies\",\n    \"generated_c\",\n]\n\n[tool.uv]\ndev-dependencies = [\n    \"pre-commit>=3.0.0\",\n    \"pytest>=7.0.0\",\n    \"pytest-benchmark>=4.0.0\",\n    \"mypy>=1.5.0\",\n    \"black>=23.0.0\",\n    \"ruff>=0.1.0\",\n]\n\n[tool.uv.workspace]\nmembers = [\n    \"hyperintel-ttl2dspy\",\n]\n\n[tool.black]\nline-length = 100\ntarget-version = ['py38', 'py39', 'py310', 'py311', 'py312']\ninclude = '\\.pyi?$'\nextend-exclude = '''\n/(\n    \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n  | generated_c\n  | v8/include\n)/\n'''\n\n[tool.ruff]\nline-length = 100\ntarget-version = \"py38\"\n\n[tool.ruff.lint]\nselect = [\n    \"E\",  # pycodestyle errors\n    \"W\",  # pycodestyle warnings\n    \"F\",  # pyflakes\n    \"I\",  # isort\n    \"B\",  # flake8-bugbear\n    \"C4\", # flake8-comprehensions\n    \"UP\", # pyupgrade\n]\nignore = [\n    \"E501\",  # line too long, handled by black\n    \"B008\",  # do not perform function calls in argument defaults\n    \"C901\",  # too complex\n]\nexclude = [\n    \".bzr\",\n    \".direnv\",\n    \".eggs\",\n    \".git\",\n    \".git-rewrite\",\n    \".hg\",\n    \".mypy_cache\",\n    \".nox\",\n    \".pants.d\",\n    \".pytype\",\n    \".ruff_cache\",\n    \".svn\",\n    \".tox\",\n    \".venv\",\n    \"__pypackages__\",\n    \"_build\",\n    \"buck-out\",\n    \"build\",\n    \"dist\",\n    \"node_modules\",\n    \"venv\",\n    \"generated_c\",\n    \"v8/include\",\n]\n\n[tool.ruff.lint.per-file-ignores]\n\"__init__.py\" = [\"F401\"]\n\"test_*.py\" = [\"B011\"]\n\n[tool.mypy]\npython_version = \"3.8\"\nwarn_return_any = true\nwarn_unused_configs = true\ndisallow_untyped_defs = true\ndisallow_incomplete_defs = true\ncheck_untyped_defs = true\ndisallow_untyped_decorators = true\nno_implicit_optional = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\nwarn_no_return = true\nwarn_unreachable = true\nstrict_equality = true\nshow_error_codes = true\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"rdflib.*\",\n    \"dspy.*\",\n    \"opentelemetry.*\",\n]\nignore_missing_imports = true\n\n[tool.pytest.ini_options]\nminversion = \"7.0\"\naddopts = \"-ra -q --strict-markers --strict-config\"\ntestpaths = [\n    \"tests\",\n    \"owl_compiler_tests\",\n]\nmarkers = [\n    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n    \"integration: marks tests as integration tests\",\n    \"benchmark: marks tests as benchmark tests\",\n    \"uhft: marks tests as ultra-high-frequency trading specific\",\n]\n\n[tool.coverage.run]\nsource = [\n    \"owl_compiler\",\n    \"ttl2dspy\", \n    \"aot_lifecycle\",\n    \"run_benchmark\",\n]\nomit = [\n    \"*/tests/*\",\n    \"*/test_*\",\n    \"generated_c/*\",\n    \"v8/*\",\n]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"pragma: no cover\",\n    \"def __repr__\",\n    \"if self.debug:\",\n    \"if settings.DEBUG\",\n    \"raise AssertionError\",\n    \"raise NotImplementedError\",\n    \"if 0:\",\n    \"if __name__ == .__main__.:\",\n    \"class .*\\\\bProtocol\\\\):\",\n    \"@(abc\\\\.)?abstractmethod\",\n]\n"
        }
    ]
}