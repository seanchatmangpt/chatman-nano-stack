{
  "terraform_syntax": {
    "format_check": {
      "status": "FAILED",
      "stdout": "deployment.tf\nenvironments/development.tfvars\nenvironments/production.tfvars\nenvironments/staging.tfvars\nmain.tf\nmonitoring.tf\nsecret-management.tf\nsecurity-hardening.tf\nsecurity.tf\nvariables.tf\n",
      "stderr": ""
    },
    "validation": {
      "status": "FAILED",
      "stdout": "",
      "stderr": "\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mDuplicate resource \"kubernetes_service_account\" configuration\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on security.tf line 143:\n\u001b[31m\u2502\u001b[0m \u001b[0m 143: \u001b[4mresource \"kubernetes_service_account\" \"cns_sa\"\u001b[0m {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA kubernetes_service_account resource named \"cns_sa\" was already declared\n\u001b[31m\u2502\u001b[0m \u001b[0mat main.tf:253,1-47. Resource names must be unique per type in each module.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mDuplicate resource \"kubernetes_role\" configuration\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on security.tf line 154:\n\u001b[31m\u2502\u001b[0m \u001b[0m 154: \u001b[4mresource \"kubernetes_role\" \"cns_role\"\u001b[0m {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA kubernetes_role resource named \"cns_role\" was already declared at\n\u001b[31m\u2502\u001b[0m \u001b[0mmain.tf:265,1-38. Resource names must be unique per type in each module.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mDuplicate resource \"kubernetes_resource_quota\" configuration\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on security.tf line 189:\n\u001b[31m\u2502\u001b[0m \u001b[0m 189: \u001b[4mresource \"kubernetes_resource_quota\" \"cns_quota\"\u001b[0m {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA kubernetes_resource_quota resource named \"cns_quota\" was already declared\n\u001b[31m\u2502\u001b[0m \u001b[0mat main.tf:143,1-49. Resource names must be unique per type in each module.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mDuplicate variable declaration\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on variables.tf line 161:\n\u001b[31m\u2502\u001b[0m \u001b[0m 161: \u001b[4mvariable \"enable_service_mesh\"\u001b[0m {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA variable named \"enable_service_mesh\" was already declared at\n\u001b[31m\u2502\u001b[0m \u001b[0msecurity-hardening.tf:324,1-31. Variable names must be unique within a\n\u001b[31m\u2502\u001b[0m \u001b[0mmodule.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mDuplicate variable declaration\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on variables.tf line 167:\n\u001b[31m\u2502\u001b[0m \u001b[0m 167: \u001b[4mvariable \"enable_external_secrets\"\u001b[0m {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA variable named \"enable_external_secrets\" was already declared at\n\u001b[31m\u2502\u001b[0m \u001b[0msecret-management.tf:427,1-35. Variable names must be unique within a\n\u001b[31m\u2502\u001b[0m \u001b[0mmodule.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n"
    }
  },
  "terraform_plan": {
    "init_status": "PASSED",
    "plan_status": "PASSED",
    "plan_output": "\nTerraform used the selected providers to generate the following execution\nplan. Resource actions are indicated with the following symbols:\n  \u001b[32m+\u001b[0m create\u001b[0m\n\nTerraform will perform the following actions:\n\n\u001b[1m  # kubernetes_namespace.test\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"kubernetes_namespace\" \"test\" {\n      \u001b[32m+\u001b[0m\u001b[0m id                               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m wait_for_default_service_account = false\n\n      \u001b[32m+\u001b[0m\u001b[0m metadata {\n          \u001b[32m+\u001b[0m\u001b[0m generation       = (known after apply)\n          \u001b[32m+\u001b[0m\u001b[0m name             = \"cns-test-validation\"\n          \u001b[32m+\u001b[0m\u001b[0m resource_version = (known after apply)\n          \u001b[32m+\u001b[0m\u001b[0m uid              = (known after apply)\n        }\n    }\n\n\u001b[1mPlan:\u001b[0m 1 to add, 0 to change, 0 to destroy.\n\u001b[0m\n\n\u001b[0m\u001b[0m\u001b[1mInvalid attribute in provider configuration\u001b[0m\n\n\u001b[0m  with provider[\"registry.terraform.io/hashicorp/kubernetes\"],\n  on tmp001y9mf9.tf.json line 13, in prov",
    "plan_errors": null
  },
  "k8s_connectivity": {
    "kubectl_available": true,
    "cluster_reachable": false,
    "cluster_info": "E0724 14:45:59.221305   39003 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp 127.0.0.1:8080: connect: connection refused\"\nE0724 14:45:59.223305   39003 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp 127.0.0.1:8080: connect: connection refused\"\nE0724 14:45:59.224951   39003 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp 127.0.0.1:8080: connect: connection refused\"\nE0724 14:45:59.226571   39003 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp 127.0.0.1:8080: connect: connection refused\"\nE0724 14:45:59.228222   39003 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp 127.0.0.1:8080: connect: connection refused\"\nThe connection to the server localhost:8080 was refused - did you specify the right host or port?\n",
    "nodes_count": 0,
    "nodes_ready": 0
  },
  "security_policies": {
    "pod_security_policies": {
      "available": false,
      "count": 0
    },
    "network_policies": {
      "available": false,
      "count": 0
    },
    "rbac": {
      "available": false
    }
  },
  "deployment_simulation": {
    "status": "FAILED",
    "error": "Failed to create test namespace: The connection to the server localhost:8080 was refused - did you specify the right host or port?\n"
  },
  "resource_validation": {
    "resource_quotas": {
      "quotas_available": false
    },
    "limit_ranges": {
      "limit_ranges_available": false
    }
  },
  "validation_summary": {
    "total_duration": 8.90233770897612,
    "tests_completed": 6,
    "overall_success": false,
    "terraform_ready": true,
    "k8s_ready": false,
    "security_validated": true,
    "deployment_tested": false,
    "timestamp": 1753393559.602277
  }
}