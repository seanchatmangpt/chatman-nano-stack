
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cns-forge-service-account
  namespace: cns-forge
  annotations:
    app: cns-forge
    security-policy: least-privilege
---
# Namespace-scoped role with minimal permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: cns-forge
  name: cns-forge-minimal-role
rules:
# Pod management - read only
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# ConfigMaps - read only
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
# Services - read only  
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
# Events - create only for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
# Secrets - no access (handled by external secret management)
# StatefulSets - read only
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["get", "list", "watch"]
# Metrics - read only
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cns-forge-minimal-binding
  namespace: cns-forge
subjects:
- kind: ServiceAccount
  name: cns-forge-service-account
  namespace: cns-forge
roleRef:
  kind: Role
  name: cns-forge-minimal-role
  apiGroup: rbac.authorization.k8s.io
---
# Security Policy to enforce restrictions
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: cns-forge-restricted-psp
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
