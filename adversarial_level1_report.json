{
  "level": "1",
  "test_name": "Input Validation Attacks",
  "total_tests": 48,
  "vulnerabilities": [],
  "risk_level": "LOW",
  "detailed_results": {
    "ttl_fuzzing": [
      {
        "test": 0,
        "status": "PARSED",
        "signals_count": 0,
        "parse_time": 0.0014951229095458984
      },
      {
        "test": 1,
        "status": "PARSED",
        "signals_count": 0,
        "parse_time": 0.0002779960632324219
      },
      {
        "test": 2,
        "status": "PARSED",
        "signals_count": 0,
        "parse_time": 0.0003027915954589844
      },
      {
        "test": 3,
        "status": "PARSED",
        "signals_count": 0,
        "parse_time": 0.00019788742065429688
      },
      {
        "test": 4,
        "status": "FAILED",
        "error": "at line 2 of <>:\nBad syntax (bad escape) at ^ in:\n\"b'@prefix : <http://test.com/> .\\n:signal :name \"test'^b'\\\\x00null\" .'\"",
        "parse_time": 0.00015687942504882812
      },
      {
        "test": 5,
        "status": "PARSED",
        "signals_count": 0,
        "parse_time": 0.00018596649169921875
      },
      {
        "test": 6,
        "status": "PARSED",
        "signals_count": 0,
        "parse_time": 0.0001709461212158203
      }
    ],
    "injection_attacks": [
      {
        "test": 0,
        "payload": "<script>alert('XSS')</script>",
        "status": "PROCESSED"
      },
      {
        "test": 1,
        "payload": "javascript:alert('XSS')",
        "status": "PROCESSED"
      },
      {
        "test": 2,
        "payload": "<img src=x onerror=alert('XSS')>",
        "status": "PROCESSED"
      },
      {
        "test": 3,
        "payload": "'; DROP TABLE signals; --",
        "status": "PROCESSED"
      },
      {
        "test": 4,
        "payload": "' OR '1'='1",
        "status": "PROCESSED"
      },
      {
        "test": 5,
        "payload": "' UNION SELECT * FROM users --",
        "status": "PROCESSED"
      },
      {
        "test": 6,
        "payload": "; rm -rf /",
        "status": "PROCESSED"
      },
      {
        "test": 7,
        "payload": "&& cat /etc/passwd",
        "status": "PROCESSED"
      },
      {
        "test": 8,
        "payload": "| nc -l 4444",
        "status": "PROCESSED"
      },
      {
        "test": 9,
        "payload": "__import__('os').system('id')",
        "status": "PROCESSED"
      },
      {
        "test": 10,
        "payload": "eval('print(42)')",
        "status": "PROCESSED"
      },
      {
        "test": 11,
        "payload": "exec('import subprocess; subprocess.call([\"id\"])')",
        "status": "FAILED",
        "error": "at line 6 of <>:\nBad syntax (expected '.' or '}' or ']' at end of statement) at ^ in:\n\"...b'nal ;\\n    :name \"exec(\\'import subprocess; subprocess.call([\"'^b'id\"])\\')\" ;\\n    :id 11 .\\n'\""
      },
      {
        "test": 12,
        "payload": "%s%s%s%s%s%s%s%s%s%s",
        "status": "PROCESSED"
      },
      {
        "test": 13,
        "payload": "%n%n%n%n%n%n%n%n%n%n",
        "status": "PROCESSED"
      },
      {
        "test": 14,
        "payload": "%x%x%x%x%x%x%x%x%x%x",
        "status": "PROCESSED"
      }
    ],
    "boundary_tests": [
      {
        "test": 0,
        "value": "2147483647",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 1,
        "value": "-2147483648",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 2,
        "value": "9223372036854775807",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 3,
        "value": "-9223372036854775808",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 4,
        "value": "0",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 5,
        "value": "-1",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 6,
        "value": "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 7,
        "value": "-10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 8,
        "value": "inf",
        "status": "FAILED",
        "error": "at line 7 of <>:\nBad syntax (objectList expected) at ^ in:\n\"...b'ignal rdf:type :Signal ;\\n    :name \"boundary_test\" ;\\n    :id'^b' inf .\\n'\""
      },
      {
        "test": 9,
        "value": "-inf",
        "status": "FAILED",
        "error": "at line 7 of <>:\nBad syntax (objectList expected) at ^ in:\n\"...b'ignal rdf:type :Signal ;\\n    :name \"boundary_test\" ;\\n    :id'^b' -inf .\\n'\""
      },
      {
        "test": 10,
        "value": "nan",
        "status": "FAILED",
        "error": "at line 7 of <>:\nBad syntax (objectList expected) at ^ in:\n\"...b'ignal rdf:type :Signal ;\\n    :name \"boundary_test\" ;\\n    :id'^b' nan .\\n'\""
      }
    ],
    "encoding_attacks": [
      {
        "test": 0,
        "payload": "b'\\xc0\\x80'",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 1,
        "payload": "b'\\xc1\\x9c'",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 2,
        "payload": "'\\ud800\\udc00'",
        "status": "CRASH",
        "error": "'utf-8' codec can't encode characters in position 140-141: surrogates not allowed"
      },
      {
        "test": 3,
        "payload": "'\\ud800'",
        "status": "CRASH",
        "error": "'utf-8' codec can't encode character '\\ud800' in position 140: surrogates not allowed"
      },
      {
        "test": 4,
        "payload": "'\\udc00'",
        "status": "CRASH",
        "error": "'utf-8' codec can't encode character '\\udc00' in position 140: surrogates not allowed"
      },
      {
        "test": 5,
        "payload": "'\u212c\ud835\udcbe\ud835\udcc9\ud835\udc9c\ud835\udcb8\ud835\udcc9\ud835\udc5c\ud835\udcc7'",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 6,
        "payload": "'\ud835\udc01\ud835\udc22\ud835\udc2d\ud835\udc00\ud835\udc1c\ud835\udc2d\ud835\udc28\ud835\udc2b'",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 7,
        "payload": "'\\u202eAB'",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 8,
        "payload": "'Bit\\u200bActor'",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 9,
        "payload": "'Bit\\u200cActor'",
        "status": "PROCESSED",
        "signals_found": 0
      },
      {
        "test": 10,
        "payload": "'Bit\\ufeffActor'",
        "status": "PROCESSED",
        "signals_found": 0
      }
    ],
    "buffer_overflow_attempts": [
      {
        "test": 0,
        "input_size": 1000,
        "status": "PROCESSED",
        "processing_time": 0.005624055862426758
      },
      {
        "test": 1,
        "input_size": 10000,
        "status": "PROCESSED",
        "processing_time": 0.005548000335693359
      },
      {
        "test": 2,
        "input_size": 100000,
        "status": "PROCESSED",
        "processing_time": 0.006962776184082031
      },
      {
        "test": 3,
        "input_size": 1000000,
        "status": "PROCESSED",
        "processing_time": 0.010294914245605469
      }
    ],
    "format_string_attacks": []
  }
}